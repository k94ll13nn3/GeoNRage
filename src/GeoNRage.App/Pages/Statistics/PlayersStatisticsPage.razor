@page "/statistics/players"

@inherits UserSettingsAwareComponent

<Container Condition="Players?.Any() == true">
    <ChildContent>
        <div class="container">
            <Table Items="Players"
                   Headers="@(new TableHeader[]
								{
									new("Joueur", nameof(PlayerStatisticDto.Name)),
									new(LabelStore.Get<PlayerStatisticDto, int>(ps => ps.NumberOf5000), nameof(PlayerStatisticDto.NumberOf5000)),
									new(LabelStore.Get<PlayerStatisticDto, int>(ps => ps.NumberOf4999), nameof(PlayerStatisticDto.NumberOf4999)),
									new(LabelStore.Get<PlayerStatisticDto, int>(ps => ps.ChallengesCompleted), nameof(PlayerStatisticDto.ChallengesCompleted)),
									new(LabelStore.Get<PlayerStatisticDto, double?>(ps => ps.RoundAverage), nameof(PlayerStatisticDto.RoundAverage)),
									new(LabelStore.Get<PlayerStatisticDto, int?>(ps => ps.BestGameSum), nameof(PlayerStatisticDto.BestGameSum)),
									new(string.Empty)
								})"
                   SortFunction="Sort">
                <RowContent Context="player">
                    <th>
                        <PlayerDisplay Id="@player.Id" Name="@player.Name" IconUrl="@player.IconUrl" WithLink />
                    </th>
                    <td>@player.NumberOf5000</td>
                    <td>@player.NumberOf4999</td>
                    <td>@player.ChallengesCompleted</td>
                    <td>@(player.RoundAverage?.ToString("F1") ?? "—")</td>
                    <td>
                        <Container Condition="player.BestGameSum is not null && player.BestGameId is not null">
                            <ChildContent>
                                @player.BestGameSum (<a href="@NavigationManager.ToAbsoluteUri($"/games/{player.BestGameId}")">#@player.BestGameId</a>)
                            </ChildContent>
                            <ElseContent>
                                —
                            </ElseContent>
                        </Container>
                    </td>
                    <td>
                        <input type="checkbox"
                               checked=@SelectedPlayerIds.Contains(player.Id)
                               @onchange="eventArgs => { PlayerChecked(player.Id, eventArgs.Value); }"
                               disabled="@(!SelectedPlayerIds.Contains(player.Id) && CanCompare())" />
                    </td>
                </RowContent>
                <FooterContent>
                    <th colspan="7" class="has-text-right">
                        <button class="button is-primary" @onclick="@CompareAsync" disabled="@(!CanCompare())">
                            <span class="icon">
                                <i class="fas fa-random"></i>
                            </span>
                            <span>Comparer</span>
                        </button>
                    </th>
                </FooterContent>
            </Table>
        </div>
    </ChildContent>
    <ElseContent>
        <LoadingAnimation>
            Chargement...
        </LoadingAnimation>
    </ElseContent>
</Container>
