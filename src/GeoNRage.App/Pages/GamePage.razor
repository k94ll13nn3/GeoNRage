@page "/games/{Id:int}"

@using GeoNRage.App.Components.Games

<Container Condition="HubClosed">
    <div class="notification is-danger error-alert">
        Connexion avec le serveur perdue, reconnexion echouée.
    </div>
</Container>

<Container Condition="HubReconnecting">
    <div class="notification is-warning error-alert">
        Connexion avec le serveur perdue, tentative de reconnexion...
    </div>
</Container>

<Container Condition="HubReconnected">
    <div class="notification is-info error-alert">
        Connexion avec le serveur rétablie. Vous pouvez à nouveau envoyer et recevoir des données, cependant les données reçues
        pendant la tentative de reconnexion ne seront pas mise à jour.
        <a @onclick="ReloadPageAsync">Rafraichir la page</a>
    </div>
</Container>

<Container Condition="Loaded && GameFound">
    <div class="container is-fluid is-flex is-align-items-center is-align-self-center is-justify-content-center">
        <div class="card m-3">
            <header class="card-header">
                <div class="card-header-title is-size-3 game-title" style="display: block">
                    <h1 class="title">@Game.Name</h1>
                    <h2 class="subtitle">@Game.Date.ToShortDateString()</h2>
                </div>
                <div class="card-header-icon">
                    <div class="field has-addons">
                        <Container Condition="AvailablePlayers.Any()">
                            <p class="control">
                                <button class="button" @onclick="() => ShowAddPlayer = true">
                                    <span class="is-hidden-touch"></span>
                                    <span class="icon is-small">
                                        <i class="fas fa-user"></i>
                                    </span>
                                    <span class="is-hidden-touch">Joueurs</span>
                                </button>
                            </p>
                        </Container>
                        <p class="control">
                            <button class="button" @onclick="() => ShowChart = true">
                                <span class="is-hidden-touch"></span>
                                <span class="icon is-small">
                                    <i class="fas fa-chart-line"></i>
                                </span>
                                <span class="is-hidden-touch">Graph.</span>
                            </button>
                        </p>
                        <p class="control">
                            <button class="button" @onclick="() => ShowRankings = true">
                                <span class="is-hidden-touch"></span>
                                <span class="icon is-small">
                                    <i class="fas fa-table"></i>
                                </span>
                                <span class="is-hidden-touch">Classement</span>
                            </button>
                        </p>
                    </div>
                </div>
            </header>
            <div class="card-content">
                <div class="table-container">
                    <table>
                        <Repeater Items="Game.Challenges" Context="challenge">
                            <tr>
                                <th>
                                    @challenge.MapName
                                    <a href="https://www.geoguessr.com/challenge/@challenge.GeoGuessrId" target="_blank" class="action-button">
                                        <span class="icon">
                                            <i class="fas fa-link" aria-hidden="true"></i>
                                        </span>
                                    </a>
                                </th>
                                <Repeater Items="challenge.PlayerScores" Context="playerScore">
                                    <th>@playerScore.PlayerName</th>
                                </Repeater>
                            </tr>

                            @{ var i = 1; }
                            <Repeater Items="Enumerable.Range(1, 5)" Context="round">
                                <tr>
                                    <th>Round @round</th>
                                    @{ var j = 1; }
                                    <Repeater Items="challenge.PlayerScores" Context="playerScore">
                                        @{
                                            var key = $"{challenge.Id}_{playerScore.PlayerId}_{round}";
                                        }
                                        <td>
                                            <NumericInput @key="@key"
                                                          InitialValue="@Scores[(challenge.Id, playerScore.PlayerId, round)]"
                                                          ValueChanged="@(async (e) => { await SendAsync(challenge.Id, playerScore.PlayerId, round, e);})"
                                                          Class="@(Scores[(challenge.Id, playerScore.PlayerId, round)] == 5000 ? "perfect" : (Scores[(challenge.Id, playerScore.PlayerId, round)] == 4999 ? "almost-perfect" : ""))"
                                                          TabIndex="@(i + j)"></NumericInput>
                                        </td>
                                        @{ j++; }
                                    </Repeater>
                                    @{ i += 100; }
                                </tr>
                            </Repeater>

                            <tr>
                                <th>Total</th>
                                <Repeater Items="challenge.PlayerScores" Context="playerScore">
                                    <th>@(Scores.Where(s => s.Key.challengeId == challenge.Id && s.Key.playerId == playerScore.PlayerId).Sum(s => s.Value) ?? 0)</th>
                                </Repeater>
                            </tr>
                        </Repeater>

                        <Container Condition="Game.Challenges.Any()">
                            <tr class="bordered">
                                <th>Total global</th>
                                <Repeater Items="Game.Challenges.SelectMany(c => c.PlayerScores).GroupBy(p => p.PlayerId)" Context="playerScores">
                                    <th>@(Scores.Where(s => s.Key.playerId == playerScores.Key).Sum(s => s.Value) ?? 0)</th>
                                </Repeater>
                            </tr>
                        </Container>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="modal @(ShowRankings ? "is-active" : "")">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Tableau des scores</p>
                <button class="delete" aria-label="close" @onclick="() => ShowRankings = false"></button>
            </header>
            <section class="modal-card-body">
                <GameRankings Game="@Game"></GameRankings>
            </section>
            <footer class="modal-card-foot">
                <button class="button is-primary" @onclick="() => ShowRankings = false">Fermer</button>
            </footer>
        </div>
    </div>

    <div class="modal @(ShowChart ? "is-active" : "")">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Graphique</p>
                <button class="delete" aria-label="close" @onclick="() => ShowChart = false"></button>
            </header>
            <section class="modal-card-body">
                <GameChart Scores="@Scores" Challenges="@Game.Challenges" Players="@Game.Players" @ref="Chart"></GameChart>
            </section>
            <footer class="modal-card-foot">
                <button class="button is-primary" @onclick="() => ShowChart = false">Fermer</button>
            </footer>
        </div>
    </div>

    <div class="modal @(ShowAddPlayer ? "is-active" : "")">
        <div class="modal-background"></div>
        <div class="modal-card" style="width:auto !important;">
            <header class="modal-card-head">
                <p class="modal-card-title">Ajouter un joueur</p>
                <button class="delete" aria-label="close" @onclick="() => ShowAddPlayer = false"></button>
            </header>
            <section class="modal-card-body">
                <div class="is-flex is-flex-direction-row">
                    <div class="select">
                        <select @bind="@SelectedPlayerId">
                            @foreach (var player in AvailablePlayers)
                            {
                                <option value="@player.Id"> @player.Name </option>
                            }
                        </select>
                    </div>
                    <button @onclick="AddPlayerAsync" class="ml-3 button is-primary">Ajouter joueur</button>
                </div>
            </section>
            <footer class="modal-card-foot">
                <button class="button is-primary" @onclick="() => ShowAddPlayer = false">Fermer</button>
            </footer>
        </div>
    </div>
</Container>

<Container Condition="!Loaded && GameFound">
    <LoadingAnimation>
        Chargement de la partie @(Id)...
    </LoadingAnimation>
</Container>

<Container Condition="!GameFound">
    <PageNotFound />
</Container>
