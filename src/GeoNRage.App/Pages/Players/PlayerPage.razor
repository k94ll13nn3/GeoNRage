@page "/players/{Id}"

@using Plotly.Blazor

@inherits UserSettingsAwareComponent

<Container Condition="Loaded && PlayerFound">
    <PageTitle>@Player.Name</PageTitle>
</Container>

<Container Condition="Loaded && PlayerFound">
    <ChildContent>
        <div class="container">
            <div class="m-3">
                <section class="hero is-primary is-small">
                    <div class="hero-body">
                        <div class="level">
                            <div class="level-left">
                                <div class="level-item">
                                    <figure class="image is-64x64">
                                        <img class="is-rounded" src="@Player.IconUrl">
                                    </figure>
                                </div>
                                <div class="level-item is-hero-content-item">
                                    <div>
                                        <h1 class="title is-spaced">@Player.Name</h1>
                                        <h3 class="subtitle">
                                            Rookie @*TODO*@
                                        </h3>
                                    </div>
                                </div>
                            </div>
                            <div class="level-right">
                                <div class="level-item">
                                    <a href="https://www.geoguessr.com/user/@Player.Id" target="_blank" class="button is-link">
                                        <span class="icon is-small">
                                            <i class="fas fa-map-marker-alt"></i>
                                        </span>
                                        <span>Profil GeoGuessr</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>


                </section>
            </div>

            <h1 class="is-size-4 my-3 mx-6">Statistiques générales</h1>
            <nav class="level mx-3 my-5">
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOf5000)</p>
                        <p class="title">@Player.Statistics.NumberOf5000</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOf4999)</p>
                        <p class="title">@Player.Statistics.NumberOf4999</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.ChallengesCompleted)</p>
                        <p class="title">@Player.Statistics.ChallengesCompleted</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.BestGameSum)</p>
                        <p class="title">
                            <Container Condition="Player.Statistics.BestGameSum is not null">
                                <ChildContent>
                                    @Player.Statistics.BestGameSum
                                </ChildContent>
                                <ElseContent>
                                    —
                                </ElseContent>
                            </Container>
                        </p>
                    </div>
                </div>
            </nav>
            <nav class="level mx-3 my-5">
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOfGamesPlayed)</p>
                        <p class="title">@Player.Statistics.NumberOfGamesPlayed</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOfFirstPlaceInGame)</p>
                        <p class="title">@Player.Statistics.NumberOfFirstPlaceInGame</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOfSecondPlaceInGame)</p>
                        <p class="title">@Player.Statistics.NumberOfSecondPlaceInGame</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOfThirdPlaceInGame)</p>
                        <p class="title">@Player.Statistics.NumberOfThirdPlaceInGame</p>
                    </div>
                </div>
            </nav>

            <h1 class="is-size-4 my-3 mx-6">Statistiques diverses</h1>
            <nav class="level mx-3 my-5">
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOf25000)</p>
                        <p class="title">@Player.Statistics.NumberOf25000</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.NumberOf0)</p>
                        <p class="title">@Player.Statistics.NumberOf0</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.Best5000Time)</p>
                        <p class="title">@Player.Statistics.Best5000Time.ToTimeString()</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.Best25000Time)</p>
                        <p class="title">@Player.Statistics.Best25000Time.ToTimeString()</p>
                    </div>
                </div>
            </nav>

            <nav class="level mx-3 my-5">
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.TimeByRoundAverage)</p>
                        <p class="title">@Player.Statistics.TimeByRoundAverage.ToTimeString()</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.DistanceAverage)</p>
                        <p class="title">@Player.Statistics.DistanceAverage.ToDistanceString()</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.TotalTime)</p>
                        <p class="title">@Player.Statistics.TotalTime.ToTimeString()</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.TotalDistance)</p>
                        <p class="title">@Player.Statistics.TotalDistance.ToDistanceString()</p>
                    </div>
                </div>
            </nav>

            <nav class="level mx-3 my-5">
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.GameAverage)</p>
                        <p class="title">@(Player.Statistics.GameAverage?.ToString("F1") ?? "—")</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.AverageOf5000ByGame)</p>
                        <p class="title">@(Player.Statistics.AverageOf5000ByGame?.ToString("F1") ?? "—")</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.MapAverage)</p>
                        <p class="title">@(Player.Statistics.MapAverage?.ToString("F1") ?? "—")</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">@LabelStore.Get(() => Player.Statistics.RoundAverage)</p>
                        <p class="title">@(Player.Statistics.RoundAverage?.ToString("F1") ?? "—")</p>
                    </div>
                </div>
            </nav>

            <div class="columns m-3">
                <div class="column">
                    <Container Condition="Player.ChallengesNotDone?.Any() == true">
                        <ChildContent>
                            <div class="card">
                                <header class="card-header">
                                    <p class="card-header-title">
                                        Cartes non jouées
                                    </p>
                                </header>
                                <div class="card-table">
                                    <div class="content">
                                        <table class="table table is-striped is-hoverable is-fullwidth">
                                            <tbody>
                                                <Repeater Items="Player.ChallengesNotDone" Context="challenge">
                                                    <tr>
                                                        <td>@challenge.MapName</td>
                                                        <td>
                                                            <Container Condition="challenge.GameId is not null">
                                                                <ChildContent>
                                                                    <a href="@NavigationManager.ToAbsoluteUri($"/games/{challenge.GameId}")">
                                                                        #@challenge.GameId
                                                                    </a>
                                                                </ChildContent>
                                                                <ElseContent>
                                                                    <a href="@NavigationManager.ToAbsoluteUri($"/challenges/{challenge.ChallengeId}")">
                                                                        #@challenge.ChallengeId (C)
                                                                    </a>
                                                                </ElseContent>
                                                            </Container>
                                                        </td>
                                                    </tr>
                                                </Repeater>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </ChildContent>
                        <ElseContent>
                            <div class="card">
                                <header class="card-header">
                                    <p class="card-header-title">
                                        Cartes non jouées
                                    </p>
                                </header>
                                <div class="no-challenges is-flex is-align-content-center is-align-items-center is-justify-content-center">
                                    Toutes les cartes disponibles ont été jouées !
                                </div>
                            </div>
                        </ElseContent>
                    </Container>
                </div>

                <div class="column">
                    <Container Condition="GameHistory?.Any() == true">
                        <ChildContent>
                            <div class="card">
                                <header class="card-header">
                                    <p class="card-header-title">
                                        Historique des parties
                                    </p>
                                    <button class="card-header-icon" @onclick="SortGameHistoryAsync">
                                        <Container Condition="SortDirection == 0">
                                            <ChildContent>
                                                <span class="icon">
                                                    <i class="fas fa-sort"></i>
                                                </span>
                                            </ChildContent>
                                            <ElseContent>
                                                <Container Condition="SortDirection == 1">
                                                    <ChildContent>
                                                        <span class="icon">
                                                            <i class="fas fa-sort-up"></i>
                                                        </span>
                                                    </ChildContent>
                                                    <ElseContent>
                                                        <span class="icon">
                                                            <i class="fas fa-sort-down"></i>
                                                        </span>
                                                    </ElseContent>
                                                </Container>
                                            </ElseContent>
                                        </Container>
                                    </button>
                                </header>
                                <div class="card-content">
                                    <PlotlyChart Config="Config" Layout="Layout" Data="Data" @ref="Chart" style="" />
                                </div>
                            </div>
                        </ChildContent>
                        <ElseContent>
                            <div class="card">
                                <header class="card-header">
                                    <p class="card-header-title">
                                        Historique des parties
                                    </p>
                                </header>
                                <div class="no-challenges is-flex is-align-content-center is-align-items-center is-justify-content-center">
                                    Aucune partie jouées
                                </div>
                            </div>
                        </ElseContent>
                    </Container>
                </div>
            </div>

            <div class="columns m-3">
                <div class="column">
                    <Container Condition="Player.ChallengesDone.Any() == true">
                        <ChildContent>
                            <div class="card">
                                <header class="card-header">
                                    <p class="card-header-title">
                                        Cartes jouées
                                    </p>
                                    <button class="card-header-icon" @onclick="() => ShowFilterPanel = true">
                                        <span class="icon @(IsFiltered ? "has-text-primary" : "")">
                                            <i class="fas fa-filter"></i>
                                        </span>
                                    </button>
                                </header>
                                <div class="card-table">
                                    <div class="content">
                                        <table class="table table is-striped is-hoverable is-fullwidth">
                                            <tbody>
                                                <Repeater Items="ChallengesDone" Context="score">
                                                    <tr>
                                                        <td>@score.MapName</td>
                                                        <td>
                                                            <Container Condition="score.GameId is not null">
                                                                <ChildContent>
                                                                    <a href="@NavigationManager.ToAbsoluteUri($"/games/{score.GameId}")">
                                                                        #@score.GameId
                                                                    </a>
                                                                </ChildContent>
                                                                <ElseContent>
                                                                    <a href="@NavigationManager.ToAbsoluteUri($"/challenges/{score.ChallengeId}")">
                                                                        #@score.ChallengeId (C)
                                                                    </a>
                                                                </ElseContent>
                                                            </Container>
                                                        </td>
                                                        <td>@score.Sum</td>
                                                    </tr>
                                                </Repeater>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </ChildContent>
                        <ElseContent>
                            <div class="card">
                                <header class="card-header">
                                    <p class="card-header-title">
                                        Cartes jouées
                                    </p>
                                </header>
                                <div class="no-challenges is-flex is-align-content-center is-align-items-center is-justify-content-center">
                                    Aucune carte jouée.
                                </div>
                            </div>
                        </ElseContent>
                    </Container>
                </div>

                <div class="column">
                    <div class="card">
                        <header class="card-header">
                            <p class="card-header-title">
                                Meilleur score et moyennes par carte (score, distance, temps)
                            </p>
                        </header>
                        <div class="card-table">
                            <div class="content">
                                <table class="table table is-striped is-hoverable is-fullwidth">
                                    <tbody>
                                        <Repeater Items="Player.MapsSummary" Context="map">
                                            <tr>
                                                <td>@map.MapName</td>
                                                <Container Condition="map.Best is not null">
                                                    <ChildContent>
                                                        <td>@map.Best</td>
                                                        <td>@map.RoundAverage?.ToString("F1")</td>
                                                        <td>@map.DistanceAverage.ToDistanceString()</td>
                                                        <td>@map.TimeAverage.ToTimeString()</td>
                                                    </ChildContent>
                                                    <ElseContent>
                                                        <td>—</td>
                                                        <td>—</td>
                                                        <td>—</td>
                                                        <td>—</td>
                                                    </ElseContent>
                                                </Container>
                                            </tr>
                                        </Repeater>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </ChildContent>

    <ElseContent>
        <Container Condition="!Loaded && PlayerFound">
            <LoadingAnimation>
                Chargement du joueur @(Id)...
            </LoadingAnimation>
        </Container>

        <Container Condition="!PlayerFound">
            <PageNotFound />
        </Container>
    </ElseContent>
</Container>

<div class="modal @(ShowFilterPanel ? "is-active" : "")">
    <div class="modal-background"></div>
    <div class="modal-content">
        <TagsList Placeholder="Filtrer" TagsChanged="OnFilter"></TagsList>
    </div>
    <button class="modal-close is-large" aria-label="close" type="button" @onclick="() => ShowFilterPanel = false"></button>
</div>
