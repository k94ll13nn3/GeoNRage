@page "/admin/players"

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = Roles.Admin)]

@using Humanizer;

<GeoNRage.App.Pages.Admin.AdminMenu />

<Container Condition="Players?.Any() == true">
    <ChildContent>
        <div class="container is-fluid">
            <Table Items="Players"
                   Headers="@(new TableHeader[]
                          {
                              new("Id", false, string.Empty),
                              new("Nom", false, string.Empty),
                              new("Joueur lié", false, string.Empty),
                              new("Titre", false, string.Empty),
                              new("Dernière mise à jour du profil GeoGuessr", false, string.Empty),
                              new("", false, string.Empty),
                              new("", false, string.Empty),
                              new("", false, string.Empty),
                          })"
                   PageSize="20"
                   Paginate="true"
                   @ref="PlayersTable">
                <RowContent Context="player">
                    <td>@player.Id</td>
                    <td>@player.Name</td>
                    <td>@player.AssociatedPlayerName.FormatNullWithDash()</td>
                    <td>@player.Title</td>
                    <td>@(player.LastUpdate is null ? "—" : player.LastUpdate.Value.ToLocalTime().Humanize())</td>
                    <td class="min">
                        <a class="has-text-info" @onclick="(() => EditPlayer(player.Id))">
                            <span class="icon">
                                <i class="fas fa-edit"></i>
                            </span>
                        </a>
                    </td>
                    <td class="min">
                        <a class="has-text-info" @onclick="(() => UpdateGeoGuessrProfile(player.Id))">
                            <span class="icon">
                                <i class="fas fa-sync"></i>
                            </span>
                        </a>
                    </td>
                    <td class="min">
                        <a class="has-text-danger" @onclick="(() => DeletePlayer(player.Id))">
                            <span class="icon">
                                <i class="fas fa-trash-alt"></i>
                            </span>
                        </a>
                    </td>
                </RowContent>
            </Table>
        </div>
    </ChildContent>

    <ElseContent>
        <LoadingAnimation Animated="true">
            Chargement des joueurs...
        </LoadingAnimation>
    </ElseContent>
</Container>

<div class="modal @(ShowEditForm ? "is-active" : "")">
    <EditForm Model="Player" OnValidSubmit="UpdatePlayerAsync" @ref="Form">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Edition de joueur</p>
                <button class="delete" aria-label="close" @onclick="() => ShowEditForm = false" type="button"></button>
            </header>
            <section class="modal-card-body">
                <DataAnnotationsValidator />

                <Container Condition="!string.IsNullOrWhiteSpace(Error)">
                    <div class="notification is-danger">
                        @Error
                    </div>
                </Container>

                <div class="field">
                    <label class="label">Nom</label>
                    <div class="control">
                        <InputText @bind-Value="Player.Name" placeholder="Nom" class="input" />
                        <p class="help is-danger">
                            <ValidationMessage For="@(() => Player.Name)"></ValidationMessage>
                        </p>
                    </div>
                </div>

                <div class="field">
                    <label class="label">Joueur lié</label>
                    <div class="control">
                        <div class="select">
                            <InputSelect @bind-Value="Player.AssociatedPlayerId">
                                <option value="">—</option>
                                <Repeater Items="@Players" Context="player">
                                    <option value="@player.Id">@player.Name</option>
                                </Repeater>
                            </InputSelect>
                        </div>
                    </div>
                </div>
            </section>
            <footer class="modal-card-foot">
                <button class="button is-primary" type="submit">Valider</button>
                <button class="button is-danger" @onclick="() => ShowEditForm = false" type="button">Fermer</button>
            </footer>
        </div>
    </EditForm>
</div>
