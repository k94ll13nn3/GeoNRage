@page "/admin/games"

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = Roles.Admin)]

<GeoNRage.App.Pages.Admin.AdminMenu />

<Container Condition="Games?.Any() == true">
    <ChildContent>
        <div class="container is-fluid m-3">
            <Table Items="Games"
                   Headers="@(new TableHeader[]
                          {
                              new("Id", false, string.Empty),
                              new("Nom", false, string.Empty),
                              new("Date", false, string.Empty),
                              new("Cartes", false, string.Empty),
                              new("Joueurs", false, string.Empty),
                              new("", false, string.Empty),
                              new("", false, string.Empty),
                          })"
                   PageSize="20"
                   Paginate="true"
                   @ref="GamesTable">
                <RowContent Context="game">
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Date.ToShortDateString()</td>
                    <td>@game.Challenges.Count()</td>
                    <td>@game.PlayerIds.Count()</td>
                    <td class="min">
                        <a class="has-text-info" @onclick="(() => EditGame(game.Id))">
                            <span class="icon">
                                <i class="fas fa-edit"></i>
                            </span>
                        </a>
                    </td>
                    <td class="min">
                        <a class="has-text-danger" @onclick="(() => DeleteGame(game.Id))">
                            <span class="icon">
                                <i class="fas fa-trash-alt"></i>
                            </span>
                        </a>
                    </td>
                </RowContent>
                <FooterContent>
                    <th colspan="7" class="has-text-right">
                        <button class="button is-primary" @onclick="ShowGameCreation">
                            <span class="icon">
                                <i class="fas fa-plus"></i>
                            </span>
                            <span>Créer</span>
                        </button>
                    </th>
                </FooterContent>
            </Table>
        </div>
    </ChildContent>

    <ElseContent>
        <LoadingAnimation Animated="true">
            Chargement des parties...
        </LoadingAnimation>
    </ElseContent>
</Container>

<div class="modal @(ShowEditForm ? "is-active" : "")">
    <EditForm Model="Game" OnValidSubmit="CreateOrUpdateGameAsync" @ref="Form">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Edition de partie</p>
                <button class="delete" aria-label="close" @onclick="() => ShowEditForm = false" type="button"></button>
            </header>
            <section class="modal-card-body">
                <DataAnnotationsValidator />

                <Container Condition="!string.IsNullOrWhiteSpace(Error)">
                    <div class="notification is-danger">
                        @Error
                    </div>
                </Container>

                <div class="field">
                    <label class="label">Nom</label>
                    <div class="control">
                        <InputText @bind-Value="Game.Name" placeholder="Nom" class="input" />
                        <p class="help is-danger">
                            <ValidationMessage For="@(() => Game.Name)"></ValidationMessage>
                        </p>
                    </div>
                </div>

                <div class="field">
                    <label class="label">Date</label>
                    <div class="control">
                        <InputDate @bind-Value="Game.Date" placeholder="Date" class="input" />
                        <p class="help is-danger">
                            <ValidationMessage For="@(() => Game.Date)"></ValidationMessage>
                        </p>
                    </div>
                </div>

                <Repeater Items="@Game.Challenges" Context="challenge">
                    <div class="field">
                        <label class="label">Carte</label>
                        <div class="control">
                            <div class="field is-grouped">
                                <div class="control is-expanded">
                                    <InputText @bind-Value="challenge.GeoGuessrId" placeholder="GeoGuessr Id" class="input" />
                                    <p class="help is-danger">
                                        <ValidationMessage For="@(() => challenge.GeoGuessrId)"></ValidationMessage>
                                    </p>
                                </div>
                                <div class="control">
                                    <div class="select">
                                        <InputSelect @bind-Value="challenge.MapId">
                                            <Repeater Items="@Maps" Context="map">
                                                <option value="@map.Id">@(map.IsMapForGame ? $"{map.Name}*" : map.Name)</option>
                                            </Repeater>
                                        </InputSelect>
                                    </div>
                                </div>
                                <div class="control">
                                    <button class="button is-danger" @onclick="() => Game.Challenges.Remove(challenge)" type="button">
                                        <span class="icon">
                                            <i class="fas fa-trash-alt"></i>
                                        </span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </Repeater>

                <button @onclick="() => Game.Challenges.Add(new GameChallengeCreateOrEditDto { MapId = Maps.First().Id })" type="button" class="button is-primary">
                    <span class="icon">
                        <i class="fas fa-plus"></i>
                    </span>
                    <span>Ajouter carte</span>
                </button>

                <CheckboxList Data="@Players" LabelSelector="@(p => p.Name)" IdSelector="@(p => p.Id)" SelectedIds="@Game.PlayerIds" />
            </section>
            <footer class="modal-card-foot">
                <button class="button is-primary" type="submit">Valider</button>
                <button class="button is-danger" @onclick="() => ShowEditForm = false" type="button">Fermer</button>
            </footer>
        </div>
    </EditForm>
</div>
