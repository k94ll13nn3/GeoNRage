<div class="dialog-box">
    <EditForm Model="_game" OnValidSubmit="CreateOrUpdateGameAsync" @ref="_form">
        <div class="dialog-title py-1">
            <span class="has-text-weight-semibold is-size-4 m-4">Edition de partie</span>
        </div>

        <div class="m-4">
            <DataAnnotationsValidator />

            <Container Condition="!string.IsNullOrWhiteSpace(_error)">
                <div class="notification is-danger">
                    @_error
                </div>
            </Container>

            <div class="field">
                <label class="label">Nom</label>
                <div class="control">
                    <InputText @bind-Value="_game.Name" placeholder="Nom" class="input" />
                    <p class="help is-danger">
                        <ValidationMessage For="@(() => _game.Name)"></ValidationMessage>
                    </p>
                </div>
            </div>

            <div class="field">
                <label class="label">Date</label>
                <div class="control">
                    <InputDate @bind-Value="_game.Date" placeholder="Date" class="input" />
                    <p class="help is-danger">
                        <ValidationMessage For="@(() => _game.Date)"></ValidationMessage>
                    </p>
                </div>
            </div>

            <label class="label">Cartes</label>
            <Repeater Items="@_game.Challenges" Context="challenge">
                <div class="field">
                    <div class="control">
                        <div class="field is-grouped">
                            <div class="control is-expanded">
                                <InputText @bind-Value="challenge.GeoGuessrId" placeholder="GeoGuessr Id" class="input" />
                                <p class="help is-danger">
                                    <ValidationMessage For="@(() => challenge.GeoGuessrId)"></ValidationMessage>
                                </p>
                            </div>
                            <div class="control">
                                <div class="select">
                                    <InputSelect @bind-Value="challenge.MapId">
                                        <Repeater Items="@_maps" Context="map">
                                            <option value="@map.Id">@(map.IsMapForGame ? $"{map.Name}*" : map.Name)</option>
                                        </Repeater>
                                    </InputSelect>
                                </div>
                            </div>
                            <div class="control">
                                <a class="button is-link" href="@($"https://www.geoguessr.com/maps/{challenge.MapId}/play")" target="_blank">
                                    <span class="icon">
                                        <i class="fas fa-external-link-alt"></i>
                                    </span>
                                </a>
                            </div>
                            <div class="control">
                                <button class="button is-danger" @onclick="() => _game.Challenges.Remove(challenge)" type="button">
                                    <span class="icon">
                                        <i class="fas fa-trash-alt"></i>
                                    </span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </Repeater>

            <button @onclick="() => _game.Challenges.Add(new GameChallengeCreateOrEditDto { MapId = _maps.First().Id })" type="button" class="button is-primary">
                <span class="icon">
                    <i class="fas fa-plus"></i>
                </span>
                <span>Ajouter carte</span>
            </button>

            <CheckboxList Data="@_players" LabelSelector="@(p => p.Name)" IdSelector="@(p => p.Id)" SelectedIds="@_game.PlayerIds" Label="Joueurs" />
        </div>

        <div class="buttons two-buttons has-addons is-flex">
            <button class="button is-success is-radiusless" type="submit">Valider</button>
            <button class="button is-danger is-radiusless" @onclick="Cancel" type="button">Annuler</button>
        </div>
    </EditForm>
</div>
