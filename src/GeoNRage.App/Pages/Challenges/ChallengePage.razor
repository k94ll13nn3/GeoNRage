@page "/challenges/{Id:int}"

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = Roles.Member)]

<Container Condition="Loaded && ChallengeFound">
    <PageTitle>@Challenge.MapName</PageTitle>
</Container>

<Container Condition="Loaded && ChallengeFound">
    <div class="container is-fluid is-flex is-align-items-center is-align-self-center is-justify-content-center">
        <div class="card m-3">
            <header class="card-header">
                <div class="card-header-title is-size-3 game-title" style="display: block">
                    <h1 class="title">
                        @Challenge.MapName
                    </h1>
                </div>
                <div class="card-header-icon">
                    <div class="field has-addons">
                        <p class="control">
                            <a href="https://www.geoguessr.com/challenge/@Challenge.GeoGuessrId" target="_blank" class="button">
                                <span class="icon">
                                    <i class="fas fa-link" aria-hidden="true"></i>
                                </span>
                            </a>
                        </p>
                        <p class="control">
                            <button class="button" @onclick="Refresh">
                                <span class="is-hidden-touch"></span>
                                <span class="icon is-small">
                                    <i class="fas fa-sync-alt"></i>
                                </span>
                                <span class="is-hidden-touch">Rafraîchir</span>
                            </button>
                        </p>
                    </div>
                </div>
            </header>
            <div class="card-content">
                <Table @ref="ChallengeTable"
                       Items="Challenge.PlayerScores.OrderByDescending(p => p.PlayerGuesses.Sum(g => g.Score))"
                       Headers="@(new TableHeader[]
                                  {
                                      new("", false, string.Empty),
                                      new("Round 1", false, string.Empty),
                                      new("Round 2", false, string.Empty),
                                      new("Round 3", false, string.Empty),
                                      new("Round 4", false, string.Empty),
                                      new("Round 5", false, string.Empty),
                                      new("Total", false, string.Empty),
                                  })"
                       IsNarrow="false">
                    <RowContent Context="playerScore">
                        <td>@playerScore.PlayerName</td>
                        <Repeater Items="Enumerable.Range(1, 5)" Context="round">
                            @{
                                var guess = Challenge.PlayerScores.FirstOrDefault(x => x.PlayerId == playerScore.PlayerId)?.PlayerGuesses.FirstOrDefault(g => g.RoundNumber == round);
                            }
                            <Container Condition="guess is not null">
                                <ChildContent>
                                    <td class="@(guess!.Score == 5000 ? "has-background-success has-text-success-invert" : (guess.Score == 4999 ? "has-background-warning has-text-warning-invert" : ""))">
                                        @guess!.Score <br />
                                        <small>@($"{guess.Distance.ToDistanceString()}") / @($"{guess.Time.ToTimeString()}")</small>
                                    </td>
                                </ChildContent>
                                <ElseContent>
                                    <td>—</td>
                                </ElseContent>
                            </Container>
                        </Repeater>

                        @{
                            var sum = playerScore.PlayerGuesses.Sum(g => g.Score);
                        }
                        <td class="@(sum == 25000 ? "has-background-success has-text-success-invert" : (sum == 24999 ? "has-background-warning has-text-warning-invert" : ""))">
                            @(sum ?? 0) <br />
                            <small>@($"{playerScore.PlayerGuesses.Sum(g => g.Distance).ToDistanceString()}") / @($"{playerScore.PlayerGuesses.Sum(g => g.Time).ToTimeString()}")</small>
                        </td>
                    </RowContent>
                </Table>
            </div>
        </div>
    </div>
</Container>

<Container Condition="!Loaded && ChallengeFound">
    <LoadingAnimation>
        Chargement du challenge @(Id)...
    </LoadingAnimation>
</Container>

<Container Condition="!ChallengeFound">
    <PageNotFound />
</Container>
