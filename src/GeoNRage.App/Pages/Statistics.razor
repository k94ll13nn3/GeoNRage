@page "/statistics"

<Container Condition="Players?.Any() != true">
    <LoadingAnimation>
        Chargement...
    </LoadingAnimation>
</Container>

<Container Condition="Players?.Any() == true">
    <div class="container mt-1">
        <table class="table is-bordered is-striped is-hoverable is-fullwidth">
            <thead>
                <tr>
                    <th>Joueur</th>
                    <th>Nombre de 5000</th>
                    <th>Nombre de 4999 😏</th>
                    <th>Nombre de carte complétées</th>
                    <th>Meilleure partie (<span title="Seules les 3 premières cartes (ou moins) comptent" style="cursor:help">?</span>)</th>
                </tr>
            </thead>
            <tbody>
                <Repeater Items="Players" Context="player">
                    <tr>
                        <th>@player.Name</th>
                        <td>@player.PlayerScores.SelectMany(p => p.Rounds).Count(s => s == 5000)</td>
                        <td>@player.PlayerScores.SelectMany(p => p.Rounds).Count(s => s == 4999)</td>
                        <td>@player.PlayerScores.Count(p => p.Rounds.All(s => s is not null or 0))</td>
                        <td>
                            @{
                                List<PlayerScoreWithChallengeDto> results = player.PlayerScores.GroupBy(p => p.Challenge.GameId).OrderByDescending(g => g.OrderBy(c => c.Challenge.Id).Take(3).Select(p => p.Sum).Sum()).First().OrderBy(c => c.Challenge.Id).Take(3).ToList();
                            }
                            @results.Select(p => p.Sum).Sum() (<a href="@NavigationManager.ToAbsoluteUri($"/games/{results.First().Challenge.GameId}")">#@results.First().Challenge.GameId</a>)
                        </td>
                    </tr>
                </Repeater>
            </tbody>
        </table>
    </div>
</Container>
