// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace GeoNRage.Server.Migrations
{
    public partial class AddPlayerGuessTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "PlayerGuesses",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    ChallengeId = table.Column<int>(type: "int", nullable: false),
                    PlayerId = table.Column<string>(type: "varchar(255)", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4"),
                    Order = table.Column<int>(type: "int", nullable: false),
                    Score = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PlayerGuesses", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PlayerGuesses_PlayerScores_ChallengeId_PlayerId",
                        columns: x => new { x.ChallengeId, x.PlayerId },
                        principalTable: "PlayerScores",
                        principalColumns: new[] { "ChallengeId", "PlayerId" },
                        onDelete: ReferentialAction.Cascade);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            for (int i = 1; i <= 5; i++)
            {
                migrationBuilder.Sql($@"
INSERT INTO PlayerGuesses (ChallengeId, PlayerId, `Order`, Score)
SELECT ChallengeId, PlayerId, {i}, Round{i} FROM PlayerScores;");
            }

            migrationBuilder.DropColumn(
                name: "Round1",
                table: "PlayerScores");

            migrationBuilder.DropColumn(
                name: "Round2",
                table: "PlayerScores");

            migrationBuilder.DropColumn(
                name: "Round3",
                table: "PlayerScores");

            migrationBuilder.DropColumn(
                name: "Round4",
                table: "PlayerScores");

            migrationBuilder.DropColumn(
                name: "Round5",
                table: "PlayerScores");

            migrationBuilder.CreateIndex(
                name: "IX_PlayerGuesses_ChallengeId_PlayerId_Order",
                table: "PlayerGuesses",
                columns: new[] { "ChallengeId", "PlayerId", "Order" },
                unique: true);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "PlayerGuesses");

            migrationBuilder.AddColumn<int>(
                name: "Round1",
                table: "PlayerScores",
                type: "int",
                nullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Round2",
                table: "PlayerScores",
                type: "int",
                nullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Round3",
                table: "PlayerScores",
                type: "int",
                nullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Round4",
                table: "PlayerScores",
                type: "int",
                nullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Round5",
                table: "PlayerScores",
                type: "int",
                nullable: true);
        }
    }
}
